services:
  db:
    image: postgres:16
    container_name: asp-db
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - asp-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: on-failure
    healthcheck:
      test: pg_isready -U ${DB_USER} -d ${DB_NAME}
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - asp-network

  redis:
    container_name: redis
    image: redis:7.4.2
    restart: always
    ports:
      - '6379:6379'
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - asp-network

  django:
    build:
      context: .
      target: app
      args:
        UID: ${UID}
        GID: ${GID}
    container_name: asp-django
    entrypoint: /app/entrypoint.sh
    command: bash -c "python manage.py runserver 0.0.0.0:${DJANGO_PORT}"
    volumes:
      - .:/app
      - ./media:/app/arbisoft_sessions_portal/media
    ports:
      - "${DJANGO_PORT}:${DJANGO_PORT}"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      celery:
        condition: service_started
    networks:
      - asp-network

  celery:
    container_name: celery
    restart: always
    build:
      context: .
      target: app
    command: celery -A arbisoft_sessions_portal worker -l info --logfile celery.log
    depends_on:
      redis:
        condition: service_started
    volumes:
      - .:/app
      - ./media:/app/arbisoft_sessions_portal/media
    networks:
      - asp-network

  lint:
    profiles:
      - dev
    build:
      context: .
      target: dev
      args:
        UID: ${UID}
        GID: ${GID}
    container_name: asp-lint
    volumes:
      - .:/app
    environment:
      - TOXENV=quality
    command: tox
    networks:
      - asp-network

  test:
    profiles:
      - dev
    build:
      context: .
      target: dev
      args:
        UID: ${UID}
        GID: ${GID}
    container_name: asp-test
    volumes:
      - .:/app
    command: pytest --cov=. --cov-report=term
    depends_on:
      db:
        condition: service_healthy
    networks:
      - asp-network

volumes:
  asp-data:

networks:
  asp-network:
